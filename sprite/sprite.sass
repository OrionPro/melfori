// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-name: 'arrow'
$arrow-x: 235px
$arrow-y: 5px
$arrow-offset-x: -235px
$arrow-offset-y: -5px
$arrow-width: 6px
$arrow-height: 9px
$arrow-total-width: 338px
$arrow-total-height: 230px
$arrow-image: '../img/sprite.png'
$arrow: (235px, 5px, -235px, -5px, 6px, 9px, 338px, 230px, '../img/sprite.png', 'arrow', )
$bottom-title-decor-name: 'bottom_title_decor'
$bottom-title-decor-x: 230px
$bottom-title-decor-y: 0px
$bottom-title-decor-offset-x: -230px
$bottom-title-decor-offset-y: 0px
$bottom-title-decor-width: 108px
$bottom-title-decor-height: 5px
$bottom-title-decor-total-width: 338px
$bottom-title-decor-total-height: 230px
$bottom-title-decor-image: '../img/sprite.png'
$bottom-title-decor: (230px, 0px, -230px, 0px, 108px, 5px, 338px, 230px, '../img/sprite.png', 'bottom_title_decor', )
$ellipse-name: 'ellipse'
$ellipse-x: 241px
$ellipse-y: 5px
$ellipse-offset-x: -241px
$ellipse-offset-y: -5px
$ellipse-width: 7px
$ellipse-height: 7px
$ellipse-total-width: 338px
$ellipse-total-height: 230px
$ellipse-image: '../img/sprite.png'
$ellipse: (241px, 5px, -241px, -5px, 7px, 7px, 338px, 230px, '../img/sprite.png', 'ellipse', )
$title-block-left-decor-name: 'title_block_left_decor'
$title-block-left-decor-x: 230px
$title-block-left-decor-y: 5px
$title-block-left-decor-offset-x: -230px
$title-block-left-decor-offset-y: -5px
$title-block-left-decor-width: 5px
$title-block-left-decor-height: 100px
$title-block-left-decor-total-width: 338px
$title-block-left-decor-total-height: 230px
$title-block-left-decor-image: '../img/sprite.png'
$title-block-left-decor: (230px, 5px, -230px, -5px, 5px, 100px, 338px, 230px, '../img/sprite.png', 'title_block_left_decor', )
$who-are-we-item-img-back-name: 'who_are_we_item_img_back'
$who-are-we-item-img-back-x: 0px
$who-are-we-item-img-back-y: 0px
$who-are-we-item-img-back-offset-x: 0px
$who-are-we-item-img-back-offset-y: 0px
$who-are-we-item-img-back-width: 230px
$who-are-we-item-img-back-height: 230px
$who-are-we-item-img-back-total-width: 338px
$who-are-we-item-img-back-total-height: 230px
$who-are-we-item-img-back-image: '../img/sprite.png'
$who-are-we-item-img-back: (0px, 0px, 0px, 0px, 230px, 230px, 338px, 230px, '../img/sprite.png', 'who_are_we_item_img_back', )
$spritesheet-width: 338px
$spritesheet-height: 230px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow, $bottom-title-decor, $ellipse, $title-block-left-decor, $who-are-we-item-img-back, )
$spritesheet: (338px, 230px, '../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
